#!/bin/bash
# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è SQL-agent –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
#
# –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞: Ubuntu 24.04 —Å HestiaCP
# –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: 2025-10-19
#
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:
# 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã (Python, Nginx, Certbot)
# 2. –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ tar+ssh (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å HestiaCP)
# 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
# 4. –°–æ–∑–¥–∞–µ—Ç systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
# 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Nginx reverse proxy (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å HestiaCP)
# 6. –ü–æ–ª—É—á–∞–µ—Ç SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ Let's Encrypt (webroot –º–µ—Ç–æ–¥)
# 7. –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="31.172.73.121"
SERVER_USER="root"
DOMAIN="skripkahack.ru"
APP_DIR="/opt/sql-agent"
PROJECT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ SQL-agent –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $DOMAIN ($SERVER_IP)"
echo "üìÅ –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh_exec() {
    sshpass -p 'UpFRdRp0NDvMIYGQ' ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} "$@"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è sshpass
if ! command -v sshpass &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sshpass..."
    sudo apt-get update
    sudo apt-get install -y sshpass
fi

# –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
echo "üì¶ –®–∞–≥ 1/8: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
ssh_exec "bash -s" << 'EOF'
set -e
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    nginx \
    certbot \
    python3-certbot-nginx \
    htop \
    curl \
    build-essential \
    libpq-dev

echo "‚úÖ –ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF

# –®–∞–≥ 2: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "üì¶ –®–∞–≥ 2/8: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
ssh_exec "mkdir -p $APP_DIR"

# –§–∞–π–ª—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ–º tar —á–µ—Ä–µ–∑ ssh –≤–º–µ—Å—Ç–æ scp)
echo "  –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ tar..."
cd "$PROJECT_DIR"
tar czf - main.py requirements.txt README.md pytest.ini | \
    sshpass -p 'UpFRdRp0NDvMIYGQ' ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} \
    "cd $APP_DIR && tar xzf -"

echo "  –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —á–µ—Ä–µ–∑ tar..."
tar czf - sql_agent datasets static tests | \
    sshpass -p 'UpFRdRp0NDvMIYGQ' ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} \
    "cd $APP_DIR && tar xzf -"

echo "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"

# –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
echo "üì¶ –®–∞–≥ 3/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
ssh_exec "bash -s" << EOF
set -e
cd $APP_DIR
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF

# –®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üì¶ –®–∞–≥ 4/8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à OPEN_ROUTER API –∫–ª—é—á: " API_KEY

ssh_exec "bash -s" << EOF
cat > $APP_DIR/.env << ENVEOF
OPEN_ROUTER=$API_KEY
ENVEOF
chmod 600 $APP_DIR/.env
echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
EOF

# –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
echo "üì¶ –®–∞–≥ 5/8: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
ssh_exec "bash -s" << 'EOF'
cat > /etc/systemd/system/sql-agent.service << 'SERVICEEOF'
[Unit]
Description=SQL-agent REST API for Database Optimization
After=network.target
Wants=network-online.target

[Service]
Type=simple
User=root
Group=root
WorkingDirectory=/opt/sql-agent
Environment="PATH=/opt/sql-agent/venv/bin"
EnvironmentFile=/opt/sql-agent/.env
ExecStart=/opt/sql-agent/venv/bin/python /opt/sql-agent/main.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal
SyslogIdentifier=sql-agent

[Install]
WantedBy=multi-user.target
SERVICEEOF

systemctl daemon-reload
systemctl enable sql-agent
echo "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"
EOF

# –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
echo "üì¶ –®–∞–≥ 6/8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
cat "$PROJECT_DIR/nginx.conf" | sshpass -p 'UpFRdRp0NDvMIYGQ' ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} \
    "cat > /etc/nginx/sites-available/sql-agent"

ssh_exec "bash -s" << 'EOF'
set -e
# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled /etc/nginx/conf.d/domains

# –î–æ–±–∞–≤–ª—è–µ–º include –¥–ª—è sites-enabled –≤ nginx.conf –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! grep -q 'include /etc/nginx/sites-enabled' /etc/nginx/nginx.conf; then
    sed -i '/http {/a\    include /etc/nginx/sites-enabled/*;' /etc/nginx/nginx.conf
fi

# –°–æ–∑–¥–∞—ë–º —Å–∏–º–ª–∏–Ω–∫
ln -sf /etc/nginx/sites-available/sql-agent /etc/nginx/sites-enabled/sql-agent

# –û—Ç–∫–ª—é—á–∞–µ–º default_server –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 80 –∏ 443 (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å HestiaCP)
if [ -f /etc/nginx/conf.d/31.172.73.121.conf ]; then
    sed -i 's/listen 31.172.73.121:80 default_server;/listen 31.172.73.121:80;/' /etc/nginx/conf.d/31.172.73.121.conf
    sed -i 's/listen 31.172.73.121:443 default_server ssl;/listen 31.172.73.121:443 ssl;/' /etc/nginx/conf.d/31.172.73.121.conf
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
nginx -t

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx
systemctl reload nginx
echo "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
EOF

# –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "üì¶ –®–∞–≥ 7/8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
read -p "–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è Let's Encrypt: " EMAIL

ssh_exec "bash -s" << EOF
set -e
# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è webroot
mkdir -p /var/www/html/.well-known/acme-challenge
chmod -R 755 /var/www/html

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —á–µ—Ä–µ–∑ webroot
certbot certonly --webroot \
    -w /var/www/html \
    -d $DOMAIN \
    -d www.$DOMAIN \
    --non-interactive \
    --agree-tos \
    --email $EMAIL

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx —Å SSL
cat > /etc/nginx/sites-available/sql-agent << 'NGINXEOF'
# HTTP ‚Üí HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name $DOMAIN www.$DOMAIN;
    
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    location / {
        return 301 https://\$host\$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name $DOMAIN www.$DOMAIN;
    
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    access_log /var/log/nginx/sql-agent-access.log;
    error_log /var/log/nginx/sql-agent-error.log;
    
    client_max_body_size 100M;
    
    location / {
        proxy_pass http://127.0.0.1:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        
        proxy_read_timeout 900s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    location /health {
        proxy_pass http://127.0.0.1:8001/health;
        access_log off;
        proxy_read_timeout 5s;
        proxy_connect_timeout 5s;
    }
}
NGINXEOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx
nginx -t && systemctl reload nginx

echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω –∏ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
EOF

# –®–∞–≥ 8: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üì¶ –®–∞–≥ 8/8: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
ssh_exec "bash -s" << EOF
# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p $APP_DIR/logs $APP_DIR/task_logs
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
systemctl start sql-agent
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
sleep 3
systemctl status sql-agent --no-pager
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
EOF

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
echo "üß™ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
sleep 5

if curl -sf https://$DOMAIN/health > /dev/null 2>&1; then
    echo "‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ:"
    echo "  URL: https://$DOMAIN"
    echo "  Health Check: https://$DOMAIN/health"
    curl -s https://$DOMAIN/health | grep -q "healthy" && echo "  –°—Ç–∞—Ç—É—Å: üü¢ Healthy"
else
    echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "  ssh root@$SERVER_IP 'journalctl -u sql-agent -n 50'"
fi

echo ""
echo "üîç –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ssh root@$SERVER_IP 'systemctl status sql-agent'"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: ssh root@$SERVER_IP 'journalctl -u sql-agent -f'"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ssh root@$SERVER_IP 'systemctl restart sql-agent'"
echo ""
echo "üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ./DEPLOYMENT.md"
echo "  –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç: ./QUICKSTART.md"
echo "  –†–∞–±–æ—Ç–∞ —Å –ª–æ–≥–∞–º–∏: ./LOGS_GUIDE.md"
echo ""

