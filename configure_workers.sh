#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ SQL-agent
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./configure_workers.sh <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–≤–æ—Ä–∫–µ—Ä–æ–≤>

set -e

SERVER="root@31.172.73.121"
PASSWORD="UpFRdRp0NDvMIYGQ"

if [ -z "$1" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–≤–æ—Ä–∫–µ—Ä–æ–≤>"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 2   # –î–ª—è —Å–ª–∞–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (1 CPU, 1 GB RAM)"
    echo "  $0 4   # –î–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (2 CPU, 2 GB RAM)"
    echo "  $0 6   # –î–ª—è —Å–∏–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (4 CPU, 4 GB RAM)"
    exit 1
fi

WORKERS=$1

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —á–∏—Å–ª–∞
if ! [[ "$WORKERS" =~ ^[0-9]+$ ]] || [ "$WORKERS" -lt 1 ] || [ "$WORKERS" -gt 20 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 20"
    exit 1
fi

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SQL-agent –Ω–∞ $WORKERS –≤–æ—Ä–∫–µ—Ä–æ–≤..."
echo ""

# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞..."
sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no "$SERVER" << 'EOF'
CPU=$(nproc)
RAM=$(free -m | grep Mem | awk '{print $2}')

echo "CPU: $CPU —è–¥–µ—Ä"
echo "RAM: $RAM MB"
echo ""

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if [ $CPU -eq 1 ] && [ $(($RAM / 1024)) -lt 2 ]; then
    echo "‚ö†Ô∏è  –°–ª–∞–±—ã–π —Å–µ—Ä–≤–µ—Ä - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è max 2 –≤–æ—Ä–∫–µ—Ä–∞"
elif [ $CPU -ge 2 ] && [ $(($RAM / 1024)) -ge 2 ]; then
    echo "‚úÖ –°—Ä–µ–¥–Ω–∏–π —Å–µ—Ä–≤–µ—Ä - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 4-6 –≤–æ—Ä–∫–µ—Ä–æ–≤"
elif [ $CPU -ge 4 ] && [ $(($RAM / 1024)) -ge 4 ]; then
    echo "‚úÖ –°–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 8-10 –≤–æ—Ä–∫–µ—Ä–æ–≤"
fi
EOF

echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –Ω–∞ $WORKERS –≤–æ—Ä–∫–µ—Ä–æ–≤? (y/n) " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 1
fi

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no "$SERVER" << EOF
cd /opt/sql-agent

# –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
cp sql_agent/api.py sql_agent/api.py.backup.\$(date +%Y%m%d_%H%M%S)

# –ò–∑–º–µ–Ω–∏—Ç—å max_workers
sed -i "s/max_workers=[0-9]\\+/max_workers=$WORKERS/" sql_agent/api.py

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
echo "–ù–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
grep "max_workers=" sql_agent/api.py | head -1

echo ""
echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞"
EOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no "$SERVER" << 'EOF'
systemctl restart sql-agent
sleep 3
systemctl status sql-agent --no-pager | head -15
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
sleep 2

HEALTH=$(curl -s https://skripkahack.ru/health)
STATUS=$(echo "$HEALTH" | jq -r '.status' 2>/dev/null)

if [ "$STATUS" = "healthy" ]; then
    echo "‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "$HEALTH" | jq -r '
        "–í–µ—Ä—Å–∏—è: \(.version)",
        "Uptime: \(.uptime_seconds) —Å–µ–∫—É–Ω–¥",
        "Max workers: \(.components.queue.max_size // "N/A")"
    ' 2>/dev/null || echo "$HEALTH"
else
    echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "–û—Ç–≤–µ—Ç: $HEALTH"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "  ssh root@31.172.73.121 'journalctl -u sql-agent -n 50'"
fi

echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:   ssh root@31.172.73.121 'journalctl -u sql-agent -f'"
echo "  –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:   ssh root@31.172.73.121 'systemctl status sql-agent'"
echo "  –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π:  ssh root@31.172.73.121 'cd /opt/sql-agent && mv sql_agent/api.py.backup.* sql_agent/api.py && systemctl restart sql-agent'"

